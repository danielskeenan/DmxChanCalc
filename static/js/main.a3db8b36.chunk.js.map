{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","chanA","setChanA","chanB","setChanB","Navbar","variant","bg","Brand","className","Form","Group","as","Row","Label","column","sm","htmlFor","Col","NumberInput","name","value","onChange","e","parseInt","target","max","val","props","Control","type","min","render","StrictMode","document","getElementById"],"mappings":"kOAIe,SAASA,IAAO,IAAD,EACAC,mBAAS,GADT,mBACnBC,EADmB,KACZC,EADY,OAEAF,mBAAS,GAFT,mBAEnBG,EAFmB,KAEZC,EAFY,KAI1B,OACI,qCACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,GAAG,OAA1B,SACI,cAACF,EAAA,EAAOG,MAAR,uCAEJ,sBAAMC,UAAU,YAAhB,SACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACI,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAGC,QAAQ,SAAlC,oBACA,cAACC,EAAA,EAAD,UACI,cAACC,EAAD,CAAaC,KAAK,SACLC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAsCrB,EAASsB,SAASD,EAAEE,OAAOJ,gBAIhG,eAACX,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACI,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAGC,QAAQ,SAAlC,oBACA,cAACC,EAAA,EAAD,UACI,cAACC,EAAD,CAAaC,KAAK,SACLC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAsCnB,EAASoB,SAASD,EAAEE,OAAOJ,gBAIhG,uBACA,eAACX,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACI,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAGC,QAAQ,WAAlC,oBACA,cAACC,EAAA,EAAD,UACI,cAACC,EAAD,CAAaE,OAAQpB,GAAS,GAAKE,EACtBuB,IAAI,QACJJ,SAAU,SAACC,GACP,IAAMI,EAAMH,SAASD,EAAEE,OAAOJ,OAC9BnB,GAAgB,MAANyB,IAAiB,GAC3BvB,EAAe,IAANuB,mBAWtD,SAASR,EAAYS,GACjB,OACI,cAAClB,EAAA,EAAKmB,QAAN,aAAcC,KAAK,SACLC,IAAI,IACJL,IAAI,MACJjB,UAAU,QACNmB,ICvD1BI,iBACE,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,W","file":"static/js/main.a3db8b36.chunk.js","sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport {Col, Form, Navbar, Row} from \"react-bootstrap\";\nimport './style.scss';\n\nexport default function App() {\n    const [chanA, setChanA] = useState(0);\n    const [chanB, setChanB] = useState(0);\n\n    return (\n        <>\n            <Navbar variant=\"dark\" bg=\"dark\">\n                <Navbar.Brand>DMX Channel Calculator</Navbar.Brand>\n            </Navbar>\n            <main className=\"container\">\n                <Form>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm={1} htmlFor=\"chan-a\">Chan A</Form.Label>\n                        <Col>\n                            <NumberInput name=\"chan-a\"\n                                         value={chanA}\n                                         onChange={(e: ChangeEvent<HTMLInputElement>) => setChanA(parseInt(e.target.value))}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm={1} htmlFor=\"chan-b\">Chan B</Form.Label>\n                        <Col>\n                            <NumberInput name=\"chan-b\"\n                                         value={chanB}\n                                         onChange={(e: ChangeEvent<HTMLInputElement>) => setChanB(parseInt(e.target.value))}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <hr/>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm={1} htmlFor=\"absolute\">16-Bit</Form.Label>\n                        <Col>\n                            <NumberInput value={(chanA << 8) + chanB}\n                                         max=\"65535\"\n                                         onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                                             const val = parseInt(e.target.value);\n                                             setChanA((val & 0xFF00) >> 8);\n                                             setChanB(val & 0xFF);\n                                         }}\n                            />\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </main>\n        </>\n    );\n}\n\nfunction NumberInput(props: Record<string, any>) {\n    return (\n        <Form.Control type=\"number\"\n                      min=\"0\"\n                      max=\"255\"\n                      className=\"mb-2\"\n                      {...props}\n        />\n    );\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport App from './App';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}